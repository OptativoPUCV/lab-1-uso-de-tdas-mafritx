Sun 23 Mar 2025 04:12:02 AM UTC: 
 tests:  0|5
total_score: 0/70
3f6cb15
Sun 23 Mar 2025 02:35:48 PM UTC: 
 exercises.c | 3 +++
 1 file changed, 3 insertions(+)
 tests:  1|4
total_score: 10/70
9f6370f
Sun 23 Mar 2025 04:23:10 PM UTC: 
 exercises.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->cap=10;
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->size=0
      |        ^~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
2030e12
Sun 23 Mar 2025 04:23:29 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->cap=10;
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->size=0;
      |        ^~
exercises.c:53:8: error: expected identifier or ‘(’ before ‘->’ token
   53 |    List->ele = (int**)malloc(10 * sizeof(int*));
      |        ^~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
9286d0b
Sun 23 Mar 2025 04:38:31 PM UTC: 
 exercises.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->ele = (int**)malloc(10 * sizeof(int*));
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->cap=10;
      |        ^~
exercises.c:53:8: error: expected identifier or ‘(’ before ‘->’ token
   53 |    List->size=0;
      |        ^~
exercises.c: In function ‘agrega_ele’:
exercises.c:64:13: error: expected ‘;’ before ‘}’ token
   64 |    L->size++
      |             ^
      |             ;
   65 | }
      | ~            
exercises.c: At top level:
exercises.c:78:1: error: unknown type name ‘Lis’; did you mean ‘List’?
   78 | Lis* free_lista
      | ^~~
      | List
exercises.c:78:16: error: expected ‘;’ before ‘int’
   78 | Lis* free_lista
      |                ^
      |                ;
......
   84 | int sumaLista(List *L) {
      | ~~~             
In file included from test.c:6:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
dd755e3
Sun 23 Mar 2025 05:13:16 PM UTC: 
 exercises.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->ele = (int**)malloc(10 * sizeof(int*));
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->cap=10;
      |        ^~
exercises.c:53:8: error: expected identifier or ‘(’ before ‘->’ token
   53 |    List->size=0;
      |        ^~
exercises.c: In function ‘agrega_ele’:
exercises.c:64:13: error: expected ‘;’ before ‘}’ token
   64 |    L->size++
      |             ^
      |             ;
   65 | }
      | ~            
exercises.c: In function ‘main’:
exercises.c:90:7: error: implicit declaration of function ‘print’; did you mean ‘lrint’? [-Werror=implicit-function-declaration]
   90 |       print("%d", L->ele[i]);
      |       ^~~~~
      |       lrint
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
54d6a63
Sun 23 Mar 2025 05:16:38 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->ele = (int**)malloc(10 * sizeof(int*));
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->cap=10;
      |        ^~
exercises.c:53:8: error: expected identifier or ‘(’ before ‘->’ token
   53 |    List->size=0;
      |        ^~
exercises.c: In function ‘main’:
exercises.c:90:7: error: implicit declaration of function ‘print’; did you mean ‘lrint’? [-Werror=implicit-function-declaration]
   90 |       print("%d", L->ele[i]);
      |       ^~~~~
      |       lrint
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
93439f8
Sun 23 Mar 2025 05:17:16 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:8: error: expected identifier or ‘(’ before ‘->’ token
   51 |    List->ele = (int**)malloc(10 * sizeof(int*));
      |        ^~
exercises.c:52:8: error: expected identifier or ‘(’ before ‘->’ token
   52 |    List->cap=10;
      |        ^~
exercises.c:53:8: error: expected identifier or ‘(’ before ‘->’ token
   53 |    List->size=0;
      |        ^~
exercises.c: In function ‘main’:
exercises.c:90:16: error: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int *’ [-Werror=format=]
   90 |       printf("%d", L->ele[i]);
      |               ~^   ~~~~~~~~~
      |                |         |
      |                int       int *
      |               %ls
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
775cc71
Sun 23 Mar 2025 05:18:06 PM UTC: 
 exercises.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘main’:
exercises.c:90:16: error: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘int *’ [-Werror=format=]
   90 |       printf("%d", L->ele[i]);
      |               ~^   ~~~~~~~~~
      |                |         |
      |                int       int *
      |               %ls
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
b544793
Sun 23 Mar 2025 05:18:36 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:6:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
In file included from test.c:5:
exercises.c:43:16: note: originally defined here
   43 | typedef struct List {
      |                ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:49:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct List’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct List’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
5132a90
Sun 23 Mar 2025 05:22:31 PM UTC: 
 exercises.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘create_list’:
exercises.c:51:35: error: invalid application of ‘sizeof’ to incomplete type ‘List’
   51 |    List* L = (List*)malloc(sizeof(List));
      |                                   ^~~~
exercises.c:52:5: error: invalid use of incomplete typedef ‘List’
   52 |    L->ele = (int**)malloc(10 * sizeof(int*));
      |     ^~
exercises.c:53:5: error: invalid use of incomplete typedef ‘List’
   53 |    L->cap=10;
      |     ^~
exercises.c:54:5: error: invalid use of incomplete typedef ‘List’
   54 |    L->size=0;
      |     ^~
exercises.c: In function ‘agrega_ele’:
exercises.c:59:8: error: invalid use of incomplete typedef ‘List’
   59 |    if(L->size == L->cap){
      |        ^~
exercises.c:59:19: error: invalid use of incomplete typedef ‘List’
   59 |    if(L->size == L->cap){
      |                   ^~
exercises.c:60:8: error: invalid use of incomplete typedef ‘List’
   60 |       L->cap *= 2;
      |        ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |        ^~
exercises.c:61:32: error: invalid use of incomplete typedef ‘List’
   61 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                ^~
exercises.c:61:40: error: invalid use of incomplete typedef ‘List’
   61 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                        ^~
exercises.c:63:5: error: invalid use of incomplete typedef ‘List’
   63 |    L->ele[L->size]=ele;
      |     ^~
exercises.c:63:12: error: invalid use of incomplete typedef ‘List’
   63 |    L->ele[L->size]=ele;
      |            ^~
exercises.c:65:5: error: invalid use of incomplete typedef ‘List’
   65 |    L->size++;
      |     ^~
exercises.c: In function ‘free_lista’:
exercises.c:80:25: error: invalid use of incomplete typedef ‘List’
   80 |    for (int i = 0; i < L->size ; i++){
      |                         ^~
exercises.c:81:13: error: invalid use of incomplete typedef ‘List’
   81 |       free(L->ele[i]);
      |             ^~
exercises.c:83:10: error: invalid use of incomplete typedef ‘List’
   83 |    free(L->ele);
      |          ^~
exercises.c: In function ‘main’:
exercises.c:90:27: error: invalid use of incomplete typedef ‘List’
   90 |    for (int i = 0 ; i <- L->size; i++) {
      |                           ^~
exercises.c:91:22: error: invalid use of incomplete typedef ‘List’
   91 |       printf("%d", *L->ele[i]);
      |                      ^~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
exercises.c:50:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   50 | List* create_list() {
      |       ^~~~~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:88:5: note: previous definition of ‘main’ with type ‘int()’
   88 | int main() {
      |     ^~~~
Compilation failed
4e9a30e
Sun 23 Mar 2025 05:34:40 PM UTC: 
 exercises.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)
In file included from test.c:5:
exercises.c:47:3: error: conflicting types for ‘List’; have ‘struct <anonymous>’
   47 | } List;
      |   ^~~~
In file included from exercises.c:6:
arraylist.h:4:21: note: previous declaration of ‘List’ with type ‘List’
    4 | typedef struct List List;
      |                     ^~~~
exercises.c:49:7: error: conflicting types for ‘create_list’; have ‘List *()’
   49 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.h:7:7: note: previous declaration of ‘create_list’ with type ‘List *()’
    7 | List* create_list();
      |       ^~~~~~~~~~~
In file included from test.c:6:
arraylist.c:14:7: error: conflicting types for ‘create_list’; have ‘List *()’ {aka ‘struct <anonymous> *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.h:7:7: note: previous declaration of ‘create_list’ with type ‘List *()’
    7 | List* create_list();
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: At top level:
arraylist.c:21:7: error: conflicting types for ‘first’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.h:10:7: note: previous declaration of ‘first’ with type ‘void *(List *)’
   10 | void* first(List *L);
      |       ^~~~~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: At top level:
arraylist.c:29:7: error: conflicting types for ‘next’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.h:14:7: note: previous declaration of ‘next’ with type ‘void *(List *)’
   14 | void* next(List *L);
      |       ^~~~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: At top level:
arraylist.c:37:6: error: conflicting types for ‘pushFront’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.h:17:6: note: previous declaration of ‘pushFront’ with type ‘void(List *, void *)’
   17 | void pushFront(List *L, void *dato);
      |      ^~~~~~~~~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:50:6: error: conflicting types for ‘pushBack’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.h:20:6: note: previous declaration of ‘pushBack’ with type ‘void(List *, void *)’
   20 | void pushBack(List *L, void *dato);
      |      ^~~~~~~~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:55:6: error: conflicting types for ‘pushCurrent’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.h:23:6: note: previous declaration of ‘pushCurrent’ with type ‘void(List *, void *)’
   23 | void pushCurrent(List *L, void *dato);
      |      ^~~~~~~~~~~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: At top level:
arraylist.c:68:7: error: conflicting types for ‘popFront’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.h:26:7: note: previous declaration of ‘popFront’ with type ‘void *(List *)’
   26 | void *popFront(List *L);
      |       ^~~~~~~~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: At top level:
arraylist.c:80:7: error: conflicting types for ‘popBack’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.h:29:7: note: previous declaration of ‘popBack’ with type ‘void *(List *)’
   29 | void *popBack(List *L);
      |       ^~~~~~~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: At top level:
arraylist.c:89:7: error: conflicting types for ‘popCurrent’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.h:32:7: note: previous declaration of ‘popCurrent’ with type ‘void *(List *)’
   32 | void *popCurrent(List *L);
      |       ^~~~~~~~~~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: At top level:
arraylist.c:102:5: error: conflicting types for ‘get_size’; have ‘int(List *)’ {aka ‘int(struct <anonymous> *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.h:35:5: note: previous declaration of ‘get_size’ with type ‘int(List *)’
   35 | int get_size(List *L);
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
59fc9d2
Sun 23 Mar 2025 05:35:24 PM UTC: 
 exercises.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)
In file included from test.c:5:
exercises.c:47:3: error: conflicting types for ‘List’; have ‘struct <anonymous>’
   47 | } List;
      |   ^~~~
In file included from exercises.c:6:
arraylist.h:4:21: note: previous declaration of ‘List’ with type ‘List’
    4 | typedef struct List List;
      |                     ^~~~
exercises.c:48:7: error: conflicting types for ‘create_list’; have ‘List *()’
   48 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.h:7:7: note: previous declaration of ‘create_list’ with type ‘List *()’
    7 | List* create_list();
      |       ^~~~~~~~~~~
In file included from test.c:6:
arraylist.c:14:7: error: conflicting types for ‘create_list’; have ‘List *()’ {aka ‘struct <anonymous> *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.h:7:7: note: previous declaration of ‘create_list’ with type ‘List *()’
    7 | List* create_list();
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: At top level:
arraylist.c:21:7: error: conflicting types for ‘first’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.h:10:7: note: previous declaration of ‘first’ with type ‘void *(List *)’
   10 | void* first(List *L);
      |       ^~~~~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: At top level:
arraylist.c:29:7: error: conflicting types for ‘next’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.h:14:7: note: previous declaration of ‘next’ with type ‘void *(List *)’
   14 | void* next(List *L);
      |       ^~~~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: At top level:
arraylist.c:37:6: error: conflicting types for ‘pushFront’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.h:17:6: note: previous declaration of ‘pushFront’ with type ‘void(List *, void *)’
   17 | void pushFront(List *L, void *dato);
      |      ^~~~~~~~~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:50:6: error: conflicting types for ‘pushBack’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.h:20:6: note: previous declaration of ‘pushBack’ with type ‘void(List *, void *)’
   20 | void pushBack(List *L, void *dato);
      |      ^~~~~~~~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:55:6: error: conflicting types for ‘pushCurrent’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.h:23:6: note: previous declaration of ‘pushCurrent’ with type ‘void(List *, void *)’
   23 | void pushCurrent(List *L, void *dato);
      |      ^~~~~~~~~~~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: At top level:
arraylist.c:68:7: error: conflicting types for ‘popFront’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.h:26:7: note: previous declaration of ‘popFront’ with type ‘void *(List *)’
   26 | void *popFront(List *L);
      |       ^~~~~~~~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: At top level:
arraylist.c:80:7: error: conflicting types for ‘popBack’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.h:29:7: note: previous declaration of ‘popBack’ with type ‘void *(List *)’
   29 | void *popBack(List *L);
      |       ^~~~~~~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: At top level:
arraylist.c:89:7: error: conflicting types for ‘popCurrent’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.h:32:7: note: previous declaration of ‘popCurrent’ with type ‘void *(List *)’
   32 | void *popCurrent(List *L);
      |       ^~~~~~~~~~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: At top level:
arraylist.c:102:5: error: conflicting types for ‘get_size’; have ‘int(List *)’ {aka ‘int(struct <anonymous> *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.h:35:5: note: previous declaration of ‘get_size’ with type ‘int(List *)’
   35 | int get_size(List *L);
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:87:5: note: previous definition of ‘main’ with type ‘int()’
   87 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
e425d66
Sun 23 Mar 2025 05:41:37 PM UTC: 
 exercises.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)
In file included from test.c:5:
exercises.c:47:3: error: conflicting types for ‘List’; have ‘struct <anonymous>’
   47 | } List;
      |   ^~~~
In file included from exercises.c:6:
arraylist.h:4:21: note: previous declaration of ‘List’ with type ‘List’
    4 | typedef struct List List;
      |                     ^~~~
exercises.c: In function ‘crea_lista’:
exercises.c:62:14: error: initialization of ‘List *’ from incompatible pointer type ‘List *’ [-Werror=incompatible-pointer-types]
   62 |    List* L = create_list();
      |              ^~~~~~~~~~~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:14:7: error: conflicting types for ‘create_list’; have ‘List *()’ {aka ‘struct <anonymous> *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.h:7:7: note: previous declaration of ‘create_list’ with type ‘List *()’
    7 | List* create_list();
      |       ^~~~~~~~~~~
arraylist.c: In function ‘create_list’:
arraylist.c:16:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   16 |   L->current = 0;
      |    ^~
arraylist.c: At top level:
arraylist.c:21:7: error: conflicting types for ‘first’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.h:10:7: note: previous declaration of ‘first’ with type ‘void *(List *)’
   10 | void* first(List *L);
      |       ^~~~~
arraylist.c: In function ‘first’:
arraylist.c:25:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   25 |   L->current = 0;
      |    ^~
arraylist.c:26:11: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   26 |   return L->data[L->current];
      |           ^~
arraylist.c:26:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   26 |   return L->data[L->current];
      |                   ^~
arraylist.c: At top level:
arraylist.c:29:7: error: conflicting types for ‘next’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.h:14:7: note: previous declaration of ‘next’ with type ‘void *(List *)’
   14 | void* next(List *L);
      |       ^~~~
arraylist.c: In function ‘next’:
arraylist.c:30:7: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   30 |   if(L->current < L->size - 1) {
      |       ^~
arraylist.c:31:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   31 |     L->current++;
      |      ^~
arraylist.c:32:13: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   32 |     return L->data[L->current];
      |             ^~
arraylist.c:32:21: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   32 |     return L->data[L->current];
      |                     ^~
arraylist.c: At top level:
arraylist.c:37:6: error: conflicting types for ‘pushFront’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.h:17:6: note: previous declaration of ‘pushFront’ with type ‘void(List *, void *)’
   17 | void pushFront(List *L, void *dato);
      |      ^~~~~~~~~
arraylist.c: In function ‘pushFront’:
arraylist.c:39:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   39 |     L->data[0] = dato;
      |      ^~
arraylist.c:44:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:44:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   44 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:46:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   46 |   L->data[0] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:50:6: error: conflicting types for ‘pushBack’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.h:20:6: note: previous declaration of ‘pushBack’ with type ‘void(List *, void *)’
   20 | void pushBack(List *L, void *dato);
      |      ^~~~~~~~
arraylist.c: In function ‘pushBack’:
arraylist.c:51:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   51 |   L->data[L->size] = dato;
      |    ^~
arraylist.c: At top level:
arraylist.c:55:6: error: conflicting types for ‘pushCurrent’; have ‘void(List *, void *)’ {aka ‘void(struct <anonymous> *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.h:23:6: note: previous declaration of ‘pushCurrent’ with type ‘void(List *, void *)’
   23 | void pushCurrent(List *L, void *dato);
      |      ^~~~~~~~~~~
arraylist.c: In function ‘pushCurrent’:
arraylist.c:57:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   57 |     L->data[0] = dato;
      |      ^~
arraylist.c:61:29: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   61 |   for(int i = L->size; i > L->current; i--) {
      |                             ^~
arraylist.c:62:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |      ^~
arraylist.c:62:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   62 |     L->data[i] = L->data[i - 1];
      |                   ^~
arraylist.c:64:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   64 |   L->data[L->current + 1] = dato;
      |    ^~
arraylist.c:64:12: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   64 |   L->data[L->current + 1] = dato;
      |            ^~
arraylist.c: At top level:
arraylist.c:68:7: error: conflicting types for ‘popFront’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.h:26:7: note: previous declaration of ‘popFront’ with type ‘void *(List *)’
   26 | void *popFront(List *L);
      |       ^~~~~~~~
arraylist.c: In function ‘popFront’:
arraylist.c:72:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   72 |   void* dato = L->data[0];
      |                 ^~
arraylist.c:74:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:74:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   74 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c: At top level:
arraylist.c:80:7: error: conflicting types for ‘popBack’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.h:29:7: note: previous declaration of ‘popBack’ with type ‘void *(List *)’
   29 | void *popBack(List *L);
      |       ^~~~~~~
arraylist.c: In function ‘popBack’:
arraylist.c:84:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   84 |   void* dato = L->data[L->size - 1];
      |                 ^~
arraylist.c: At top level:
arraylist.c:89:7: error: conflicting types for ‘popCurrent’; have ‘void *(List *)’ {aka ‘void *(struct <anonymous> *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.h:32:7: note: previous declaration of ‘popCurrent’ with type ‘void *(List *)’
   32 | void *popCurrent(List *L);
      |       ^~~~~~~~~~
arraylist.c: In function ‘popCurrent’:
arraylist.c:93:17: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   93 |   void* dato = L->data[L->current];
      |                 ^~
arraylist.c:93:25: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   93 |   void* dato = L->data[L->current];
      |                         ^~
arraylist.c:94:16: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   94 |   for(int i = L->current; i < L->size - 1; i++) {
      |                ^~
arraylist.c:95:6: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |      ^~
arraylist.c:95:19: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘data’
   95 |     L->data[i] = L->data[i + 1];
      |                   ^~
arraylist.c:98:4: error: ‘List’ {aka ‘struct <anonymous>’} has no member named ‘current’
   98 |   L->current--;
      |    ^~
arraylist.c: At top level:
arraylist.c:102:5: error: conflicting types for ‘get_size’; have ‘int(List *)’ {aka ‘int(struct <anonymous> *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.h:35:5: note: previous declaration of ‘get_size’ with type ‘int(List *)’
   35 | int get_size(List *L);
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:81:5: note: previous definition of ‘main’ with type ‘int()’
   81 | int main() {
      |     ^~~~
arraylist.c: In function ‘first’:
arraylist.c:27:1: error: control reaches end of non-void function [-Werror=return-type]
   27 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
d6b905a
Sun 23 Mar 2025 05:42:03 PM UTC: 
 exercises.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘agrega_ele’:
exercises.c:48:8: error: invalid use of incomplete typedef ‘List’
   48 |    if(L->size == L->cap){
      |        ^~
exercises.c:48:19: error: invalid use of incomplete typedef ‘List’
   48 |    if(L->size == L->cap){
      |                   ^~
exercises.c:49:8: error: invalid use of incomplete typedef ‘List’
   49 |       L->cap *= 2;
      |        ^~
exercises.c:50:8: error: invalid use of incomplete typedef ‘List’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |        ^~
exercises.c:50:32: error: invalid use of incomplete typedef ‘List’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                ^~
exercises.c:50:40: error: invalid use of incomplete typedef ‘List’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                        ^~
exercises.c:52:5: error: invalid use of incomplete typedef ‘List’
   52 |    L->ele[L->size] = ele;
      |     ^~
exercises.c:52:12: error: invalid use of incomplete typedef ‘List’
   52 |    L->ele[L->size] = ele;
      |            ^~
exercises.c:53:5: error: invalid use of incomplete typedef ‘List’
   53 |    L->size++;
      |     ^~
exercises.c: In function ‘free_lista’:
exercises.c:69:25: error: invalid use of incomplete typedef ‘List’
   69 |    for (int i = 0; i < L->size ; i++){
      |                         ^~
exercises.c:70:13: error: invalid use of incomplete typedef ‘List’
   70 |       free(L->ele[i]);
      |             ^~
exercises.c:72:10: error: invalid use of incomplete typedef ‘List’
   72 |    free(L->ele);
      |          ^~
exercises.c: In function ‘main’:
exercises.c:79:26: error: invalid use of incomplete typedef ‘List’
   79 |    for (int i = 0 ; i < L->size; i++) {
      |                          ^~
exercises.c:80:24: error: invalid use of incomplete typedef ‘List’
   80 |       printf("%d\n", *L->ele[i]);
      |                        ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:77:5: note: previous definition of ‘main’ with type ‘int()’
   77 | int main() {
      |     ^~~~
Compilation failed
88be17d
Sun 23 Mar 2025 05:47:46 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘agrega_ele’:
exercises.c:48:19: error: ‘List’ {aka ‘struct List’} has no member named ‘cap’
   48 |    if(L->size == L->cap){
      |                   ^~
exercises.c:49:8: error: ‘List’ {aka ‘struct List’} has no member named ‘cap’
   49 |       L->cap *= 2;
      |        ^~
exercises.c:50:8: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |        ^~
exercises.c:50:32: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                ^~
exercises.c:50:40: error: ‘List’ {aka ‘struct List’} has no member named ‘cap’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                        ^~
exercises.c:52:5: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   52 |    L->ele[L->size] = ele;
      |     ^~
exercises.c: In function ‘free_lista’:
exercises.c:70:13: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   70 |       free(L->ele[i]);
      |             ^~
exercises.c:72:10: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   72 |    free(L->ele);
      |          ^~
exercises.c: In function ‘main’:
exercises.c:80:24: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   80 |       printf("%d\n", *L->ele[i]);
      |                        ^~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
In file included from exercises.c:8:
arraylist.c:6:8: note: originally defined here
    6 | struct List {
      |        ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:14:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:21:7: error: redefinition of ‘first’
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:21:7: note: previous definition of ‘first’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:29:7: error: redefinition of ‘next’
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:29:7: note: previous definition of ‘next’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:37:6: error: redefinition of ‘pushFront’
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:37:6: note: previous definition of ‘pushFront’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:50:6: error: redefinition of ‘pushBack’
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:50:6: note: previous definition of ‘pushBack’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:55:6: error: redefinition of ‘pushCurrent’
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:55:6: note: previous definition of ‘pushCurrent’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:68:7: error: redefinition of ‘popFront’
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:68:7: note: previous definition of ‘popFront’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:80:7: error: redefinition of ‘popBack’
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:80:7: note: previous definition of ‘popBack’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:89:7: error: redefinition of ‘popCurrent’
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:89:7: note: previous definition of ‘popCurrent’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:102:5: error: redefinition of ‘get_size’
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.c:102:5: note: previous definition of ‘get_size’ with type ‘int(List *)’ {aka ‘int(struct List *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:77:5: note: previous definition of ‘main’ with type ‘int()’
   77 | int main() {
      |     ^~~~
Compilation failed
2624ace
Sun 23 Mar 2025 05:49:29 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘agrega_ele’:
exercises.c:48:15: error: comparison between pointer and integer [-Werror]
   48 |    if(L->size == L->data){
      |               ^~
exercises.c:49:8: error: ‘List’ {aka ‘struct List’} has no member named ‘cap’
   49 |       L->cap *= 2;
      |        ^~
exercises.c:50:8: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |        ^~
exercises.c:50:32: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                ^~
exercises.c:50:40: error: ‘List’ {aka ‘struct List’} has no member named ‘cap’
   50 |       L->ele = (int**)realloc(L->ele, L->cap * sizeof(int*));
      |                                        ^~
exercises.c:52:5: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   52 |    L->ele[L->size] = ele;
      |     ^~
exercises.c: In function ‘free_lista’:
exercises.c:70:13: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   70 |       free(L->ele[i]);
      |             ^~
exercises.c:72:10: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   72 |    free(L->ele);
      |          ^~
exercises.c: In function ‘main’:
exercises.c:80:24: error: ‘List’ {aka ‘struct List’} has no member named ‘ele’
   80 |       printf("%d\n", *L->ele[i]);
      |                        ^~
In file included from test.c:6:
arraylist.c: At top level:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
In file included from exercises.c:8:
arraylist.c:6:8: note: originally defined here
    6 | struct List {
      |        ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:14:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:21:7: error: redefinition of ‘first’
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:21:7: note: previous definition of ‘first’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:29:7: error: redefinition of ‘next’
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:29:7: note: previous definition of ‘next’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:37:6: error: redefinition of ‘pushFront’
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:37:6: note: previous definition of ‘pushFront’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:50:6: error: redefinition of ‘pushBack’
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:50:6: note: previous definition of ‘pushBack’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:55:6: error: redefinition of ‘pushCurrent’
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:55:6: note: previous definition of ‘pushCurrent’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:68:7: error: redefinition of ‘popFront’
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:68:7: note: previous definition of ‘popFront’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:80:7: error: redefinition of ‘popBack’
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:80:7: note: previous definition of ‘popBack’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:89:7: error: redefinition of ‘popCurrent’
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:89:7: note: previous definition of ‘popCurrent’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:102:5: error: redefinition of ‘get_size’
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.c:102:5: note: previous definition of ‘get_size’ with type ‘int(List *)’ {aka ‘int(struct List *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:77:5: note: previous definition of ‘main’ with type ‘int()’
   77 | int main() {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
6552a47
Sun 23 Mar 2025 06:07:59 PM UTC: 
 exercises.c | 46 +++++++++++++++++++++++-----------------------
 1 file changed, 23 insertions(+), 23 deletions(-)
In file included from test.c:6:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
In file included from exercises.c:8,
                 from test.c:5:
arraylist.c:6:8: note: originally defined here
    6 | struct List {
      |        ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:14:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:21:7: error: redefinition of ‘first’
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:21:7: note: previous definition of ‘first’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:29:7: error: redefinition of ‘next’
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:29:7: note: previous definition of ‘next’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:37:6: error: redefinition of ‘pushFront’
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:37:6: note: previous definition of ‘pushFront’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:50:6: error: redefinition of ‘pushBack’
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:50:6: note: previous definition of ‘pushBack’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:55:6: error: redefinition of ‘pushCurrent’
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:55:6: note: previous definition of ‘pushCurrent’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:68:7: error: redefinition of ‘popFront’
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:68:7: note: previous definition of ‘popFront’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:80:7: error: redefinition of ‘popBack’
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:80:7: note: previous definition of ‘popBack’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:89:7: error: redefinition of ‘popCurrent’
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:89:7: note: previous definition of ‘popCurrent’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:102:5: error: redefinition of ‘get_size’
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.c:102:5: note: previous definition of ‘get_size’ with type ‘int(List *)’ {aka ‘int(struct List *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:60:5: note: previous definition of ‘main’ with type ‘int()’
   60 | int main() {
      |     ^~~~
Compilation failed
1e54315
Sun 23 Mar 2025 06:09:17 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘agrega_ele’:
exercises.c:45:8: error: invalid use of incomplete typedef ‘List’
   45 |   if (L->size < 100) {
      |        ^~
exercises.c:46:6: error: invalid use of incomplete typedef ‘List’
   46 |     L->data[L->size] = ele;
      |      ^~
exercises.c:46:14: error: invalid use of incomplete typedef ‘List’
   46 |     L->data[L->size] = ele;
      |              ^~
exercises.c:47:6: error: invalid use of incomplete typedef ‘List’
   47 |     L->size++;
      |      ^~
exercises.c: In function ‘main’:
exercises.c:71:29: error: invalid use of incomplete typedef ‘List’
   71 |   for (int i = 0; i < myList->size; i++) {
      |                             ^~
exercises.c:72:32: error: invalid use of incomplete typedef ‘List’
   72 |     printf("%d ", *(int*)myList->data[i]);
      |                                ^~
exercises.c:76:29: error: invalid use of incomplete typedef ‘List’
   76 |   for (int i = 0; i < myList->size; i++) {
      |                             ^~
exercises.c:77:16: error: invalid use of incomplete typedef ‘List’
   77 |     free(myList->data[i]);
      |                ^~
test.c: At top level:
test.c:253:5: error: redefinition of ‘main’
  253 | int main( int argc, char *argv[] ) {
      |     ^~~~
exercises.c:60:5: note: previous definition of ‘main’ with type ‘int()’
   60 | int main() {
      |     ^~~~
Compilation failed
3a14370
Sun 23 Mar 2025 06:11:02 PM UTC: 
 exercises.c | 26 +-------------------------
 1 file changed, 1 insertion(+), 25 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘agrega_ele’:
exercises.c:45:8: error: invalid use of incomplete typedef ‘List’
   45 |   if (L->size < 100) {
      |        ^~
exercises.c:46:6: error: invalid use of incomplete typedef ‘List’
   46 |     L->data[L->size] = ele;
      |      ^~
exercises.c:46:14: error: invalid use of incomplete typedef ‘List’
   46 |     L->data[L->size] = ele;
      |              ^~
exercises.c:47:6: error: invalid use of incomplete typedef ‘List’
   47 |     L->size++;
      |      ^~
Compilation failed
7e192d3
Sun 23 Mar 2025 06:14:56 PM UTC: 
 exercises.c | 22 +++++++++++++++-------
 1 file changed, 15 insertions(+), 7 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:60:9: error: implicit declaration of function ‘append’ [-Werror=implicit-function-declaration]
   60 |         append(&L, num);
      |         ^~~~~~
cc1: all warnings being treated as errors
Compilation failed
a56d7be
Sun 23 Mar 2025 06:18:28 PM UTC: 
 exercises.c | 34 ++++++++++++++++++++++++++--------
 1 file changed, 26 insertions(+), 8 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:63:46: error: invalid application of ‘sizeof’ to incomplete type ‘List’
   63 |         List* newNode = (List*)malloc(sizeof(List));
      |                                              ^~~~
exercises.c:69:16: error: invalid use of incomplete typedef ‘List’
   69 |         newNode->data = num;
      |                ^~
exercises.c:70:16: error: invalid use of incomplete typedef ‘List’
   70 |         newNode->next = NULL;
      |                ^~
exercises.c:78:20: error: invalid use of incomplete typedef ‘List’
   78 |             current->next = newNode;
      |                    ^~
Compilation failed
7b3d39a
Sun 23 Mar 2025 06:20:18 PM UTC: 
 exercises.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:62:43: error: invalid application of ‘sizeof’ to incomplete type ‘List’
   62 |         List* temp = (List*)malloc(sizeof(List));
      |                                           ^~~~
exercises.c:68:13: error: invalid use of incomplete typedef ‘List’
   68 |         temp->data = num;
      |             ^~
exercises.c:69:13: error: invalid use of incomplete typedef ‘List’
   69 |         temp->next = NULL;
      |             ^~
exercises.c:77:20: error: invalid use of incomplete typedef ‘List’
   77 |             current->next = temp;
      |                    ^~
Compilation failed
db5489d
Sun 23 Mar 2025 06:21:05 PM UTC: 
 exercises.c | 2 ++
 1 file changed, 2 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:49:11: error: redefinition of ‘L’
   49 |     List* L = NULL;      // Puntero al inicio de la lista
      |           ^
exercises.c:46:10: note: previous definition of ‘L’ with type ‘List *’
   46 |    List* L = create_list();
      |          ^
exercises.c:64:43: error: invalid application of ‘sizeof’ to incomplete type ‘List’
   64 |         List* temp = (List*)malloc(sizeof(List));
      |                                           ^~~~
exercises.c:70:13: error: invalid use of incomplete typedef ‘List’
   70 |         temp->data = num;
      |             ^~
exercises.c:71:13: error: invalid use of incomplete typedef ‘List’
   71 |         temp->next = NULL;
      |             ^~
exercises.c:79:20: error: invalid use of incomplete typedef ‘List’
   79 |             current->next = temp;
      |                    ^~
Compilation failed
751d820
Sun 23 Mar 2025 06:29:44 PM UTC: 
 exercises.c | 36 ------------------------------------
 1 file changed, 36 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:48:11: error: ‘L’ undeclared (first use in this function)
   48 |    return L;
      |           ^
exercises.c:48:11: note: each undeclared identifier is reported only once for each function it appears in
exercises.c:49:1: error: control reaches end of non-void function [-Werror=return-type]
   49 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
432e1f2
Sun 23 Mar 2025 06:30:21 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|5
total_score: 0/70
91a2a9b
Sun 23 Mar 2025 06:32:21 PM UTC: 
 exercises.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:6:
arraylist.c:6:8: error: redefinition of ‘struct List’
    6 | struct List {
      |        ^~~~
In file included from exercises.c:9,
                 from test.c:5:
arraylist.c:6:8: note: originally defined here
    6 | struct List {
      |        ^~~~
arraylist.c:14:7: error: redefinition of ‘create_list’
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:14:7: note: previous definition of ‘create_list’ with type ‘List *()’ {aka ‘struct List *()’}
   14 | List* create_list() {
      |       ^~~~~~~~~~~
arraylist.c:21:7: error: redefinition of ‘first’
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:21:7: note: previous definition of ‘first’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   21 | void* first(List *L) {
      |       ^~~~~
arraylist.c:29:7: error: redefinition of ‘next’
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:29:7: note: previous definition of ‘next’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   29 | void* next(List *L) {
      |       ^~~~
arraylist.c:37:6: error: redefinition of ‘pushFront’
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:37:6: note: previous definition of ‘pushFront’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   37 | void pushFront(List *L, void *dato) {
      |      ^~~~~~~~~
arraylist.c:50:6: error: redefinition of ‘pushBack’
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:50:6: note: previous definition of ‘pushBack’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   50 | void pushBack(List *L, void *dato) {
      |      ^~~~~~~~
arraylist.c:55:6: error: redefinition of ‘pushCurrent’
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:55:6: note: previous definition of ‘pushCurrent’ with type ‘void(List *, void *)’ {aka ‘void(struct List *, void *)’}
   55 | void pushCurrent(List *L, void *dato) {
      |      ^~~~~~~~~~~
arraylist.c:68:7: error: redefinition of ‘popFront’
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:68:7: note: previous definition of ‘popFront’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   68 | void* popFront(List *L) {
      |       ^~~~~~~~
arraylist.c:80:7: error: redefinition of ‘popBack’
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:80:7: note: previous definition of ‘popBack’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   80 | void* popBack(List *L) {
      |       ^~~~~~~
arraylist.c:89:7: error: redefinition of ‘popCurrent’
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:89:7: note: previous definition of ‘popCurrent’ with type ‘void *(List *)’ {aka ‘void *(struct List *)’}
   89 | void* popCurrent(List *L) {
      |       ^~~~~~~~~~
arraylist.c:102:5: error: redefinition of ‘get_size’
  102 | int get_size(List *L) {
      |     ^~~~~~~~
arraylist.c:102:5: note: previous definition of ‘get_size’ with type ‘int(List *)’ {aka ‘int(struct List *)’}
  102 | int get_size(List *L) {
      |     ^~~~~~~~
Compilation failed
560bac4
Sun 23 Mar 2025 06:39:37 PM UTC: 
 exercises.c | 1 -
 1 file changed, 1 deletion(-)
 tests:  0|5
total_score: 0/70
3c0bbba
Sun 23 Mar 2025 06:44:44 PM UTC: 
 exercises.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:52:45: error: invalid application of ‘sizeof’ to incomplete type ‘List’
   52 |       List* new_node = (List*)malloc(sizeof(List));
      |                                             ^~~~
exercises.c:53:15: error: invalid use of incomplete typedef ‘List’
   53 |       new_node->data = element;
      |               ^~
exercises.c:54:15: error: invalid use of incomplete typedef ‘List’
   54 |       new_node->next = NULL;
      |               ^~
exercises.c:59:14: error: invalid use of incomplete typedef ‘List’
   59 |          temp->next = new_node;
      |              ^~
exercises.c:61:22: error: expected ‘;’ before ‘}’ token
   61 |       temp = new_node
      |                      ^
      |                      ;
......
   64 |    }
      |    ~                  
Compilation failed
ecb3b8e
Sun 23 Mar 2025 06:52:30 PM UTC: 
 exercises.c | 15 +++------------
 1 file changed, 3 insertions(+), 12 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:53:10: error: invalid use of incomplete typedef ‘List’
   53 |         L->data[L->size] = element;
      |          ^~
exercises.c:53:18: error: invalid use of incomplete typedef ‘List’
   53 |         L->data[L->size] = element;
      |                  ^~
exercises.c:54:10: error: invalid use of incomplete typedef ‘List’
   54 |         L->size++;
      |          ^~
Compilation failed
ac65c02
Sun 23 Mar 2025 07:14:32 PM UTC: 
 exercises.c | 5 +++++
 1 file changed, 5 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= MAX_SIZE) {
      |            ^~
exercises.c:50:22: error: ‘MAX_SIZE’ undeclared (first use in this function)
   50 |       if (L->size >= MAX_SIZE) {
      |                      ^~~~~~~~
exercises.c:50:22: note: each undeclared identifier is reported only once for each function it appears in
exercises.c:58:8: error: invalid use of incomplete typedef ‘List’
   58 |       L->data[L->size] = element;
      |        ^~
exercises.c:58:16: error: invalid use of incomplete typedef ‘List’
   58 |       L->data[L->size] = element;
      |                ^~
exercises.c:59:8: error: invalid use of incomplete typedef ‘List’
   59 |       L->size++;
      |        ^~
Compilation failed
182da17
Sun 23 Mar 2025 07:14:46 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:58:8: error: invalid use of incomplete typedef ‘List’
   58 |       L->data[L->size] = element;
      |        ^~
exercises.c:58:16: error: invalid use of incomplete typedef ‘List’
   58 |       L->data[L->size] = element;
      |                ^~
exercises.c:59:8: error: invalid use of incomplete typedef ‘List’
   59 |       L->size++;
      |        ^~
Compilation failed
9aa9606
Sun 23 Mar 2025 07:16:06 PM UTC: 
 exercises.c | 3 +++
 1 file changed, 3 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
Compilation failed
01e845b
Sun 23 Mar 2025 07:23:31 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
Compilation failed
8e75d48
Sun 23 Mar 2025 07:26:59 PM UTC: 
 exercises.c | 5 +++++
 1 file changed, 5 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:26: error: invalid use of incomplete typedef ‘List’
   64 |     for (int i = 0; i < L->size; i++) {
      |                          ^~
exercises.c:65:31: error: invalid use of incomplete typedef ‘List’
   65 |         int* element = (int*)L->data[i];
      |                               ^~
Compilation failed
12e59ca
Sun 23 Mar 2025 07:30:27 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c:9:10: fatal error: exercises.h: No such file or directory
    9 | #include "exercises.h"
      |          ^~~~~~~~~~~~~
compilation terminated.
Compilation failed
276c119
Sun 23 Mar 2025 07:30:43 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
Compilation failed
6623e25
Sun 23 Mar 2025 07:31:30 PM UTC: 
 exercises.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
Compilation failed
1cff4b0
Sun 23 Mar 2025 07:33:31 PM UTC: 
 exercises.c | 5 +++++
 1 file changed, 5 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++)
      |                         ^~
exercises.c:65:7: error: expected expression before ‘int’
   65 |       int* element = (int*)L->data[i];
      |       ^~~
exercises.c:64:4: error: this ‘for’ clause does not guard... [-Werror=misleading-indentation]
   64 |    for (int i = 0; i < L->size; i++)
      |    ^~~
exercises.c:66:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘for’
   66 |       printf("%d ", *element);
      |       ^~~~~~
exercises.c:66:22: error: ‘element’ undeclared (first use in this function)
   66 |       printf("%d ", *element);
      |                      ^~~~~~~
exercises.c:66:22: note: each undeclared identifier is reported only once for each function it appears in
exercises.c: At top level:
exercises.c:68:11: error: expected declaration specifiers or ‘...’ before string constant
   68 |    printf("\n");
      |           ^~~~
exercises.c:70:4: error: expected identifier or ‘(’ before ‘return’
   70 |    return L;
      |    ^~~~~~
exercises.c:71:1: error: expected identifier or ‘(’ before ‘}’ token
   71 | }
      | ^
exercises.c: In function ‘crea_lista’:
exercises.c:67:4: error: control reaches end of non-void function [-Werror=return-type]
   67 |    }
      |    ^
cc1: all warnings being treated as errors
Compilation failed
ea46f36
Sun 23 Mar 2025 07:34:28 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
Compilation failed
74751c9
Sun 23 Mar 2025 07:36:13 PM UTC: 
 exercises.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
exercises.c: In function ‘free_list’:
exercises.c:73:26: error: invalid use of incomplete typedef ‘List’
   73 |     for (int i = 0; i < L->size; i++) {
      |                          ^~
exercises.c:74:15: error: invalid use of incomplete typedef ‘List’
   74 |         free(L->data[i]);  // Libera cada elemento
      |               ^~
Compilation failed
6b470a8
Sun 23 Mar 2025 07:37:31 PM UTC: 
 exercises.c | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 99) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
Compilation failed
78b6639
Sun 23 Mar 2025 07:39:09 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
Compilation failed
319d841
Sun 23 Mar 2025 07:43:04 PM UTC: 
 exercises.c | 8 ++++++++
 1 file changed, 8 insertions(+)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
exercises.c: In function ‘sumaLista’:
exercises.c:82:25: error: invalid use of incomplete typedef ‘List’
   82 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:83:30: error: invalid use of incomplete typedef ‘List’
   83 |       int* elemento = (int*)L->data[i];
      |                              ^~
Compilation failed
05c7292
Sun 23 Mar 2025 07:43:33 PM UTC: 
 exercises.c | 2 --
 1 file changed, 2 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
exercises.c: In function ‘sumaLista’:
exercises.c:82:25: error: invalid use of incomplete typedef ‘List’
   82 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:83:30: error: invalid use of incomplete typedef ‘List’
   83 |       int* elemento = (int*)L->data[i];
      |                              ^~
Compilation failed
5976d91
Sun 23 Mar 2025 07:50:10 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘crea_lista’:
exercises.c:50:12: error: invalid use of incomplete typedef ‘List’
   50 |       if (L->size >= 100) {
      |            ^~
exercises.c:61:8: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |        ^~
exercises.c:61:16: error: invalid use of incomplete typedef ‘List’
   61 |       L->data[L->size] = (void*)element;
      |                ^~
exercises.c:62:8: error: invalid use of incomplete typedef ‘List’
   62 |       L->size++;
      |        ^~
exercises.c:64:25: error: invalid use of incomplete typedef ‘List’
   64 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:65:29: error: invalid use of incomplete typedef ‘List’
   65 |       int* element = (int*)L->data[i];
      |                             ^~
exercises.c: In function ‘sumaLista’:
exercises.c:82:25: error: invalid use of incomplete typedef ‘List’
   82 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:83:30: error: invalid use of incomplete typedef ‘List’
   83 |       int* elemento = (int*)L->data[i];
      |                              ^~
Compilation failed
f29fb45
Sun 23 Mar 2025 08:23:00 PM UTC: 
 exercises.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘sumaLista’:
exercises.c:98:25: error: invalid use of incomplete typedef ‘List’
   98 |    for (int i = 0; i < L->size; i++) {
      |                         ^~
exercises.c:99:30: error: invalid use of incomplete typedef ‘List’
   99 |       int* elemento = (int*)L->data[i];
      |                              ^~
Compilation failed
b42032c
Sun 23 Mar 2025 08:27:05 PM UTC: 
 exercises.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
eae1caa
Sun 23 Mar 2025 08:28:57 PM UTC: 
 exercises.c | 68 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 65 insertions(+), 3 deletions(-)
In file included from test.c:5:
exercises.c: In function ‘copia_pila’:
exercises.c:155:12: error: implicit declaration of function ‘is_empty’ [-Werror=implicit-function-declaration]
  155 |    while (!is_empty(P1)) {
      |            ^~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
a7e25e4
Sun 23 Mar 2025 08:29:27 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c:9:10: fatal error: exercises.h: No such file or directory
    9 | #include "exercises.h"
      |          ^~~~~~~~~~~~~
compilation terminated.
Compilation failed
4c53c90
Sun 23 Mar 2025 08:31:45 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘copia_pila’:
exercises.c:155:12: error: implicit declaration of function ‘is_empty’ [-Werror=implicit-function-declaration]
  155 |    while (!is_empty(P1)) {
      |            ^~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
d52bf19
Sun 23 Mar 2025 09:02:18 PM UTC: 
 exercises.c | 100 ++++++++----------------------------------------------------
 1 file changed, 13 insertions(+), 87 deletions(-)
Sun 23 Mar 2025 09:06:29 PM UTC: 
 exercises.c | 105 ------------------------------------------------------------
 1 file changed, 105 deletions(-)
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
fd62013
Sun 23 Mar 2025 09:07:55 PM UTC: 
 exercises.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:5:
exercises.c:1:8: error: expected ‘;’ before ‘typedef’
    1 | fasfasf
      |        ^
      |        ;
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
46d6ba1
Sun 23 Mar 2025 09:09:08 PM UTC: 
 exercises.c | 92 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 91 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘sumaLista’:
exercises.c:56:1: error: control reaches end of non-void function [-Werror=return-type]
   56 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
0168961
Sun 23 Mar 2025 09:10:17 PM UTC: 
 exercises.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘sumaLista’:
exercises.c:57:11: error: ‘suma’ undeclared (first use in this function)
   57 |    return suma;
      |           ^~~~
exercises.c:57:11: note: each undeclared identifier is reported only once for each function it appears in
exercises.c:58:1: error: control reaches end of non-void function [-Werror=return-type]
   58 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
88c8443
Sun 23 Mar 2025 09:11:05 PM UTC: 
 exercises.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)
 tests:  2|3
total_score: 20/70
5b510d7
Sun 23 Mar 2025 09:11:48 PM UTC: 
 exercises.c | 4 ----
 1 file changed, 4 deletions(-)
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
cc1: all warnings being treated as errors
Compilation failed
74da7b1
Sun 23 Mar 2025 09:12:08 PM UTC: 
 exercises.c | 2 ++
 1 file changed, 2 insertions(+)
 tests:  2|3
total_score: 20/70
18d58ef
Sun 23 Mar 2025 09:14:23 PM UTC: 
 exercises.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)
Sun 23 Mar 2025 09:38:57 PM UTC: 
 exercises.c | 32 +++++++++++++++++++++++++++++++-
 1 file changed, 31 insertions(+), 1 deletion(-)
Sun 23 Mar 2025 09:40:01 PM UTC: 
 exercises.c | 128 ------------------------------------------------------------
 1 file changed, 128 deletions(-)
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
52ab7a2
Sun 23 Mar 2025 09:40:23 PM UTC: 
 exercises.c | 99 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 99 insertions(+)
 tests:  2|3
total_score: 20/70
4ec01a0
Sun 23 Mar 2025 09:44:16 PM UTC: 
 exercises.c | 99 -------------------------------------------------------------
 1 file changed, 99 deletions(-)
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
b5b769c
Sun 23 Mar 2025 09:45:18 PM UTC: 
 exercises.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:5:
exercises.c:1:2: error: expected ‘;’ before ‘typedef’
    1 | s
      |  ^
      |  ;
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
f30edd5
Sun 23 Mar 2025 09:47:09 PM UTC: 
 exercises.c | 1 -
 1 file changed, 1 deletion(-)
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
d3564a4
Sun 23 Mar 2025 09:47:50 PM UTC: 
 exercises.c | 102 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 102 insertions(+)
 tests:  2|3
total_score: 20/70
a276123
Sun 23 Mar 2025 09:49:08 PM UTC: 
 exercises.c | 9 +++++++++
 1 file changed, 9 insertions(+)
 tests:  3|2
total_score: 30/70
a68e4fd
Sun 23 Mar 2025 09:49:35 PM UTC: 
 exercises.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)
 tests:  8|1
total_score: 50/70
0c4b1d4
Sun 23 Mar 2025 09:51:16 PM UTC: 
 exercises.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)
In file included from test.c:5:
exercises.c: In function ‘eliminaElementos’:
exercises.c:81:26: error: implicit declaration of function ‘current’; did you mean ‘popCurrent’? [-Werror=implicit-function-declaration]
   81 |             dato = (int*)current(L);
      |                          ^~~~~~~
      |                          popCurrent
exercises.c:81:20: error: cast to pointer from integer of different size [-Werror=int-to-pointer-cast]
   81 |             dato = (int*)current(L);
      |                    ^
cc1: all warnings being treated as errors
Compilation failed
35f5450
Sun 23 Mar 2025 09:53:18 PM UTC: 
 exercises.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  9|0
total_score: 70/70
b678941
Sun 23 Mar 2025 10:10:57 PM UTC: 
 exercises.c | 132 ------------------------------------------------------------
 1 file changed, 132 deletions(-)
test.c: In function ‘test_crea_lista’:
test.c:61:15: error: implicit declaration of function ‘crea_lista’; did you mean ‘create_list’? [-Werror=implicit-function-declaration]
   61 |     List* L = crea_lista();
      |               ^~~~~~~~~~
      |               create_list
test.c:61:15: error: initialization of ‘List *’ {aka ‘struct List *’} from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c: In function ‘test_suma_lista’:
test.c:100:17: error: implicit declaration of function ‘sumaLista’ [-Werror=implicit-function-declaration]
  100 |     int suma2 = sumaLista(L);
      |                 ^~~~~~~~~
test.c: In function ‘test_elimina_elemento’:
test.c:132:5: error: implicit declaration of function ‘eliminaElementos’; did you mean ‘test_elimina_elemento’? [-Werror=implicit-function-declaration]
  132 |     eliminaElementos(L, elem);
      |     ^~~~~~~~~~~~~~~~
      |     test_elimina_elemento
test.c: In function ‘test_copia_pila’:
test.c:159:5: error: unknown type name ‘Stack’
  159 |     Stack* P1 = create_stack();
      |     ^~~~~
test.c:159:17: error: implicit declaration of function ‘create_stack’ [-Werror=implicit-function-declaration]
  159 |     Stack* P1 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:159:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
test.c:160:5: error: unknown type name ‘Stack’
  160 |     Stack* P2 = create_stack();
      |     ^~~~~
test.c:160:17: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  160 |     Stack* P2 = create_stack();
      |                 ^~~~~~~~~~~~
test.c:161:5: error: unknown type name ‘Stack’
  161 |     Stack* Paux = create_stack();
      |     ^~~~~
test.c:161:19: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  161 |     Stack* Paux = create_stack();
      |                   ^~~~~~~~~~~~
test.c:169:8: error: implicit declaration of function ‘push’ [-Werror=implicit-function-declaration]
  169 |        push(P1, dato);
      |        ^~~~
test.c:175:5: error: implicit declaration of function ‘copia_pila’; did you mean ‘test_copia_pila’? [-Werror=implicit-function-declaration]
  175 |     copia_pila(P1, P2);
      |     ^~~~~~~~~~
      |     test_copia_pila
test.c:176:12: error: implicit declaration of function ‘top’ [-Werror=implicit-function-declaration]
  176 |     dato = top(P1);
      |            ^~~
test.c:176:10: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  176 |     dato = top(P1);
      |          ^
test.c:177:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  177 |     void* dato2 = top(P2);
      |                   ^~~
test.c:178:19: error: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  178 |     void* dato3 = top(Paux);
      |                   ^~~
test.c:181:5: error: unknown type name ‘Stack’
  181 |     Stack* P2copy = create_stack();
      |     ^~~~~
test.c:181:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  181 |     Stack* P2copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:182:5: error: unknown type name ‘Stack’
  182 |     Stack* P1copy = create_stack();
      |     ^~~~~
test.c:182:21: error: initialization of ‘int *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     Stack* P1copy = create_stack();
      |                     ^~~~~~~~~~~~
test.c:185:17: error: implicit declaration of function ‘pop’; did you mean ‘popen’? [-Werror=implicit-function-declaration]
  185 |         dato2 = pop(P2);
      |                 ^~~
      |                 popen
test.c:185:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  185 |         dato2 = pop(P2);
      |               ^
test.c:186:14: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  186 |         dato = pop(P1);
      |              ^
test.c:187:15: error: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
  187 |         dato3 = pop(Paux);
      |               ^
test.c:201:5: error: implicit declaration of function ‘imprime_y_vacia_pila’ [-Werror=implicit-function-declaration]
  201 |     imprime_y_vacia_pila(P1copy);
      |     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘test_parentesis_balanceados’:
test.c:217:9: error: implicit declaration of function ‘parentesisBalanceados’; did you mean ‘test_parentesis_balanceados’? [-Werror=implicit-function-declaration]
  217 |     if(!parentesisBalanceados(s)){
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         test_parentesis_balanceados
cc1: all warnings being treated as errors
Compilation failed
dae09f1
Sun 23 Mar 2025 10:11:06 PM UTC: 
 exercises.c | 132 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 132 insertions(+)
 tests:  9|0
total_score: 70/70
094269a
